/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_SERIAL_IO_H
#define _MOCK_SERIAL_IO_H

#include "unity.h"
#include "serial_io.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_serial_io_Init(void);
void mock_serial_io_Destroy(void);
void mock_serial_io_Verify(void);




#define serialIO_create_IgnoreAndReturn(cmock_retval) serialIO_create_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void serialIO_create_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, serialIO_t cmock_to_return);
#define serialIO_create_StopIgnore() serialIO_create_CMockStopIgnore()
void serialIO_create_CMockStopIgnore(void);
#define serialIO_create_ExpectAndReturn(number, baudrate, cmock_retval) serialIO_create_CMockExpectAndReturn(__LINE__, number, baudrate, cmock_retval)
void serialIO_create_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int number, uint32_t baudrate, serialIO_t cmock_to_return);
typedef serialIO_t (* CMOCK_serialIO_create_CALLBACK)(int number, uint32_t baudrate, int cmock_num_calls);
void serialIO_create_AddCallback(CMOCK_serialIO_create_CALLBACK Callback);
void serialIO_create_Stub(CMOCK_serialIO_create_CALLBACK Callback);
#define serialIO_create_StubWithCallback serialIO_create_Stub
#define serialIO_create_IgnoreArg_number() serialIO_create_CMockIgnoreArg_number(__LINE__)
void serialIO_create_CMockIgnoreArg_number(UNITY_LINE_TYPE cmock_line);
#define serialIO_create_IgnoreArg_baudrate() serialIO_create_CMockIgnoreArg_baudrate(__LINE__)
void serialIO_create_CMockIgnoreArg_baudrate(UNITY_LINE_TYPE cmock_line);
#define serialIO_write_Ignore() serialIO_write_CMockIgnore()
void serialIO_write_CMockIgnore(void);
#define serialIO_write_StopIgnore() serialIO_write_CMockStopIgnore()
void serialIO_write_CMockStopIgnore(void);
#define serialIO_write_Expect(serial, byte) serialIO_write_CMockExpect(__LINE__, serial, byte)
void serialIO_write_CMockExpect(UNITY_LINE_TYPE cmock_line, serialIO_t serial, char byte);
typedef void (* CMOCK_serialIO_write_CALLBACK)(serialIO_t serial, char byte, int cmock_num_calls);
void serialIO_write_AddCallback(CMOCK_serialIO_write_CALLBACK Callback);
void serialIO_write_Stub(CMOCK_serialIO_write_CALLBACK Callback);
#define serialIO_write_StubWithCallback serialIO_write_Stub
#define serialIO_write_IgnoreArg_serial() serialIO_write_CMockIgnoreArg_serial(__LINE__)
void serialIO_write_CMockIgnoreArg_serial(UNITY_LINE_TYPE cmock_line);
#define serialIO_write_IgnoreArg_byte() serialIO_write_CMockIgnoreArg_byte(__LINE__)
void serialIO_write_CMockIgnoreArg_byte(UNITY_LINE_TYPE cmock_line);
#define serialIO_print_Ignore() serialIO_print_CMockIgnore()
void serialIO_print_CMockIgnore(void);
#define serialIO_print_StopIgnore() serialIO_print_CMockStopIgnore()
void serialIO_print_CMockStopIgnore(void);
#define serialIO_print_Expect(serial, str) serialIO_print_CMockExpect(__LINE__, serial, str)
void serialIO_print_CMockExpect(UNITY_LINE_TYPE cmock_line, serialIO_t serial, const char* str);
typedef void (* CMOCK_serialIO_print_CALLBACK)(serialIO_t serial, const char* str, int cmock_num_calls);
void serialIO_print_AddCallback(CMOCK_serialIO_print_CALLBACK Callback);
void serialIO_print_Stub(CMOCK_serialIO_print_CALLBACK Callback);
#define serialIO_print_StubWithCallback serialIO_print_Stub
#define serialIO_print_IgnoreArg_serial() serialIO_print_CMockIgnoreArg_serial(__LINE__)
void serialIO_print_CMockIgnoreArg_serial(UNITY_LINE_TYPE cmock_line);
#define serialIO_print_IgnoreArg_str() serialIO_print_CMockIgnoreArg_str(__LINE__)
void serialIO_print_CMockIgnoreArg_str(UNITY_LINE_TYPE cmock_line);
#define serialIO_isAvailable_IgnoreAndReturn(cmock_retval) serialIO_isAvailable_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void serialIO_isAvailable_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define serialIO_isAvailable_StopIgnore() serialIO_isAvailable_CMockStopIgnore()
void serialIO_isAvailable_CMockStopIgnore(void);
#define serialIO_isAvailable_ExpectAndReturn(serial, cmock_retval) serialIO_isAvailable_CMockExpectAndReturn(__LINE__, serial, cmock_retval)
void serialIO_isAvailable_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, serialIO_t serial, int cmock_to_return);
typedef int (* CMOCK_serialIO_isAvailable_CALLBACK)(serialIO_t serial, int cmock_num_calls);
void serialIO_isAvailable_AddCallback(CMOCK_serialIO_isAvailable_CALLBACK Callback);
void serialIO_isAvailable_Stub(CMOCK_serialIO_isAvailable_CALLBACK Callback);
#define serialIO_isAvailable_StubWithCallback serialIO_isAvailable_Stub
#define serialIO_isAvailable_IgnoreArg_serial() serialIO_isAvailable_CMockIgnoreArg_serial(__LINE__)
void serialIO_isAvailable_CMockIgnoreArg_serial(UNITY_LINE_TYPE cmock_line);
#define serialIO_read_IgnoreAndReturn(cmock_retval) serialIO_read_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void serialIO_read_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, char cmock_to_return);
#define serialIO_read_StopIgnore() serialIO_read_CMockStopIgnore()
void serialIO_read_CMockStopIgnore(void);
#define serialIO_read_ExpectAndReturn(serial, cmock_retval) serialIO_read_CMockExpectAndReturn(__LINE__, serial, cmock_retval)
void serialIO_read_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, serialIO_t serial, char cmock_to_return);
typedef char (* CMOCK_serialIO_read_CALLBACK)(serialIO_t serial, int cmock_num_calls);
void serialIO_read_AddCallback(CMOCK_serialIO_read_CALLBACK Callback);
void serialIO_read_Stub(CMOCK_serialIO_read_CALLBACK Callback);
#define serialIO_read_StubWithCallback serialIO_read_Stub
#define serialIO_read_IgnoreArg_serial() serialIO_read_CMockIgnoreArg_serial(__LINE__)
void serialIO_read_CMockIgnoreArg_serial(UNITY_LINE_TYPE cmock_line);
#define serialIO_readStringUntil_Ignore() serialIO_readStringUntil_CMockIgnore()
void serialIO_readStringUntil_CMockIgnore(void);
#define serialIO_readStringUntil_StopIgnore() serialIO_readStringUntil_CMockStopIgnore()
void serialIO_readStringUntil_CMockStopIgnore(void);
#define serialIO_readStringUntil_Expect(serial, end, buffer) serialIO_readStringUntil_CMockExpect(__LINE__, serial, end, buffer)
void serialIO_readStringUntil_CMockExpect(UNITY_LINE_TYPE cmock_line, serialIO_t serial, char end, char* buffer);
typedef void (* CMOCK_serialIO_readStringUntil_CALLBACK)(serialIO_t serial, char end, char* buffer, int cmock_num_calls);
void serialIO_readStringUntil_AddCallback(CMOCK_serialIO_readStringUntil_CALLBACK Callback);
void serialIO_readStringUntil_Stub(CMOCK_serialIO_readStringUntil_CALLBACK Callback);
#define serialIO_readStringUntil_StubWithCallback serialIO_readStringUntil_Stub
#define serialIO_readStringUntil_ReturnThruPtr_buffer(buffer) serialIO_readStringUntil_CMockReturnMemThruPtr_buffer(__LINE__, buffer, sizeof(char))
#define serialIO_readStringUntil_ReturnArrayThruPtr_buffer(buffer, cmock_len) serialIO_readStringUntil_CMockReturnMemThruPtr_buffer(__LINE__, buffer, cmock_len * sizeof(*buffer))
#define serialIO_readStringUntil_ReturnMemThruPtr_buffer(buffer, cmock_size) serialIO_readStringUntil_CMockReturnMemThruPtr_buffer(__LINE__, buffer, cmock_size)
void serialIO_readStringUntil_CMockReturnMemThruPtr_buffer(UNITY_LINE_TYPE cmock_line, char* buffer, size_t cmock_size);
#define serialIO_readStringUntil_IgnoreArg_serial() serialIO_readStringUntil_CMockIgnoreArg_serial(__LINE__)
void serialIO_readStringUntil_CMockIgnoreArg_serial(UNITY_LINE_TYPE cmock_line);
#define serialIO_readStringUntil_IgnoreArg_end() serialIO_readStringUntil_CMockIgnoreArg_end(__LINE__)
void serialIO_readStringUntil_CMockIgnoreArg_end(UNITY_LINE_TYPE cmock_line);
#define serialIO_readStringUntil_IgnoreArg_buffer() serialIO_readStringUntil_CMockIgnoreArg_buffer(__LINE__)
void serialIO_readStringUntil_CMockIgnoreArg_buffer(UNITY_LINE_TYPE cmock_line);
#define serialIO_destroy_Ignore() serialIO_destroy_CMockIgnore()
void serialIO_destroy_CMockIgnore(void);
#define serialIO_destroy_StopIgnore() serialIO_destroy_CMockStopIgnore()
void serialIO_destroy_CMockStopIgnore(void);
#define serialIO_destroy_Expect(serial) serialIO_destroy_CMockExpect(__LINE__, serial)
void serialIO_destroy_CMockExpect(UNITY_LINE_TYPE cmock_line, serialIO_t serial);
typedef void (* CMOCK_serialIO_destroy_CALLBACK)(serialIO_t serial, int cmock_num_calls);
void serialIO_destroy_AddCallback(CMOCK_serialIO_destroy_CALLBACK Callback);
void serialIO_destroy_Stub(CMOCK_serialIO_destroy_CALLBACK Callback);
#define serialIO_destroy_StubWithCallback serialIO_destroy_Stub
#define serialIO_destroy_IgnoreArg_serial() serialIO_destroy_CMockIgnoreArg_serial(__LINE__)
void serialIO_destroy_CMockIgnoreArg_serial(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
