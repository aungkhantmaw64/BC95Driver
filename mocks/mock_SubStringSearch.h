/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_SUBSTRINGSEARCH_H
#define _MOCK_SUBSTRINGSEARCH_H

#include "unity.h"
#include "SubStringSearch.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_SubStringSearch_Init(void);
void mock_SubStringSearch_Destroy(void);
void mock_SubStringSearch_Verify(void);




#define findSubstringIndex_IgnoreAndReturn(cmock_retval) findSubstringIndex_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void findSubstringIndex_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define findSubstringIndex_StopIgnore() findSubstringIndex_CMockStopIgnore()
void findSubstringIndex_CMockStopIgnore(void);
#define findSubstringIndex_ExpectAndReturn(main_str, sub_str, cmock_retval) findSubstringIndex_CMockExpectAndReturn(__LINE__, main_str, sub_str, cmock_retval)
void findSubstringIndex_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const char* main_str, const char* sub_str, int cmock_to_return);
typedef int (* CMOCK_findSubstringIndex_CALLBACK)(const char* main_str, const char* sub_str, int cmock_num_calls);
void findSubstringIndex_AddCallback(CMOCK_findSubstringIndex_CALLBACK Callback);
void findSubstringIndex_Stub(CMOCK_findSubstringIndex_CALLBACK Callback);
#define findSubstringIndex_StubWithCallback findSubstringIndex_Stub
#define findSubstringIndex_IgnoreArg_main_str() findSubstringIndex_CMockIgnoreArg_main_str(__LINE__)
void findSubstringIndex_CMockIgnoreArg_main_str(UNITY_LINE_TYPE cmock_line);
#define findSubstringIndex_IgnoreArg_sub_str() findSubstringIndex_CMockIgnoreArg_sub_str(__LINE__)
void findSubstringIndex_CMockIgnoreArg_sub_str(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
